version: '3.4'

services:
  api01:
    container_name: api01
    image: api01
    build:
      context: ../../../../
      dockerfile: RinhaBackEnd/Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
    depends_on:
      - db
      - redis
    ports:
      - "80"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '0.65GB'
  api02:
    container_name: api02
    image: api02
    build:
      context: ../../../../
      dockerfile: RinhaBackEnd/Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
    depends_on:
      - db
      - redis
    ports:
      - "80"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '0.65GB'
  db:
    container_name: database
    image: 'postgres:latest'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.3GB'
    ports:
       - 5432:5432
    environment:
       POSTGRES_USER: rinha
       POSTGRES_PASSWORD: 7653e869faa3 
       POSTGRES_DB: rinhadb
    volumes:
      - ../../../../create-script.sql:/docker-entrypoint-initdb.d/create-script.sql
    command: postgres -c 'max_connections=1000'
  redis:
    image: redis
    container_name: cache
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.1GB'
  proxy:
    container_name: proxy
    image: nginx:latest
    volumes:
      - ../../../../nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.3GB'